== Building code
I don't like build tools, and have no base to distribute Java .jar files. So building is by hand.

You need Java and Scala.

For Java, OpenJDK is fine, and can be installed by package. Or download an Oracle jar file and put it someplace. For Scala, packages are not so reliable. Scala has always moved fast, and packaging doesn't keep up. Sake and SSC use simple Scala code, so should work even with old versions of Scala. On the whole, a download of Scala may cause less problems. Then put it on your path. Urrgh. See below, follow same instructions as installing Sake itself.
 
Right, the main event. Download Sake/ssc, and navigate a terminal into the top folder. Then,

scalac @scalacArgs

That will send the terminal wild with enthusiasm, at the end of which, you have a compile. It's in the folder/directory named 'sake'.

Then make executable .jar files from the code,

scala -verbose -toolcp sake -Dsake.runner.home= sake.PackageSake installable
scala -verbose -classpath build -Dsake.runner.home= sake.PackageSake installable


If all runs ok, a folder called sake-<some.version.name> should appear inside the folder. It has a /bin and a /lib in it. You can half-install it.


=== Reminder instructions for a half-install
Move the entire /bin folder to wherever you keep Java code, and put them on your computer's path.

Adjust the top of the Sake script to point at your choice of Scala installation (and Sake and Java, if you wish).



== Change Path
To put a folder in the operating systems $PATH, so the commandline can find it. To see your path,

echo $PATH

Find .bashrc, usually in your home folder. If you have a Debian-based system it depends on the development philosophy one long-ago frosty morning. Try  ~/.bash_profile. Or even just creating .bashrc and see if it works. Or swapping operting sytems for someone that will tell you what they are doing.

Add or ammend like this (note the lack of spaces. bash is not fond of spaces),

PATH=/home/someUserName/Websites/someSiteFolder:$PATH

or use,

/etc/profile

for all users. 

The path declaration needs,

export path

after that, but many more complex config files (e.g. Debian) have that already.

 
(you can export 

PATH=$PATH:/home/someUserName/Websites/someSiteFolder

, but it won't persist)



== Restart bash
source ~/.bashrc

or restart the whole computer, but in the middle of development, that's a right pain.



=== Adjust the script
The Sake script launcher doesn't try to 'scala' the jar, it runs Java with Scala as a library (more flexible).

You need to tell the script where to find Scala. In the script, point this variable,
 
SCALA_HOME="/path/to/my/chosen/scala/folder"

at the folder containing the Scala executables (it should contain /lib and /bin).

Don't be tempted to add formatting, especially spaces! This is BASH! It will scorn you!

You can also point at another Java, in the same way, using,

JAVA_HOME="/path/to/my/chosen/jdk"

...and change the Sake you are using, but most people will not need that.



