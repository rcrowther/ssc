== TODO

REPL, make targeted with classpath?

libraries not working with FSC?

Put a verbose on 'fsc'

Can't pass args to run because it takes '-help' etc. as SSC args.

Provide a sample 'run' for independant running?

Provide usable commandlines for any task?

Make the jar/version spacing a more conventional '-', not '_'
 
Fix documentation

----

Not handling spaces in build file groups.


Lot more with the parser. It could take task parameters.

Colours still not rising from the trait.

Colours please in -config?

Further parameter parsing?


Flush for the meters.

vms is proving there are still commandline setup possibilities to reconfigure.

probably drop compile switches from introspect and bytecode, when we are sure they don't compile...

Why does fsc think it's verbose?


Scalatest gets lost in this circumstance?
Maybe a warning and block?

"'scalaTest' 'compile sources' request has no classes to work from, is forcing compile...
"
"'scalaTest' 'compile test' request has no classes to work from, is forcing compile...
"
Yes it does? It works if the test is repeated, but new material fools it?
Test seems to have problems incrementally recompiling? It's the incremental
test compile which is failing to find it's old gear?
Is that due to compiling /main and /test seperately?

"ssc -case -text CLPa -verbose find" is throwing error, ""-i" not found"
Also, when nothing found, getting error back?

Fail behaviour of tasks:

[exception] run
[] bytecode
[] introspect
[done] find
[defended] tree
[defended] findfile
[] compile
[] test
[] doc
[] jar

Findfile is finding hidden files?

Dim the text, somehow

Select groups in -config.

bubble. Because I'm bored.

Guess package names for 'run'.

srcClean would be nice

Fix tests!

Script runner and ssc build
catch errors

errors should go to stderr? Surely?


Should overall verify input files for multiple/type input too?

Should allow default classes to have spacing?

when running, hunt for packages?


protect against pre/post slashes in user-configured paths?

sake should have a nice message if there is no temp dir?



== Done
*"Done" is abandoned as have a basic compile/install loop* Gone GitHub.
Really horrible undocumented rendering from processes , now has line ends at least.
Fixed nasty bug causing scaladoc fail and spew.
Nasty parser bug fixed (empty Booleans)
Commanline parser now returns true for lone switches
Built the progress meter, for what it's worth...
Much basic documentation added.
Added bytecode/introspect actions
Fixed 'verbose' bug
Added 'jar' to Action
Fixed incremental compile bug.
Rework of Runner construction sequence.
Rework of files into Runner and Task and Action.
Massive rework and deprecation in arg parsing.
Boosted the CLParser help.
Split commandline options lists.
Shell call nothrow and handling
Biggish rework of SSCSake makes it handle Java/Scala options as a whole.
Trace deprecated. So it should be, it's already in Sake.
SSCSake now compiles, as promised.
Extended Config to do more work
Proper 'Configure' class
Scaladoc extended for 'strict'
Configure class to handle multiple sources

